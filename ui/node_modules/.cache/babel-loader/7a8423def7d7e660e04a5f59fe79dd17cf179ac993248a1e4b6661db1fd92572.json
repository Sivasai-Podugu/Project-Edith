{"ast":null,"code":"var _jsxFileName = \"/Users/sivasai/Documents/Review Changes/Project-Edith/ui/src/components/forms/NewUserForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Input from '../atoms/Input';\nimport { useForm } from 'react-hook-form';\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport api from '../api/axiosConfig';\nimport { AlertBox } from '../alerts/AlertBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewUserForm = ({\n  formType\n}) => {\n  _s();\n  var _errors$email;\n  const [isError, setIsError] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [isSuccess, setIsSuccess] = useState(false);\n  const schema = yup.object().shape({\n    email: yup.string().email('Invalid email format').required('Email is required')\n  });\n  const {\n    register,\n    formState,\n    handleSubmit,\n    reset\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const {\n    errors\n  } = formState;\n  const onSubmit = async data => {\n    const headers = {\n      Authorization: `Bearer ${localStorage.getItem(\"Jwt\")}`\n    };\n    await api.post(\"/addcontact\", data, {\n      headers\n    }).then(response => {\n      setIsSuccess(true);\n      setIsError(false);\n      setMessage(\"Added Successfully..\");\n    }).catch(error => {\n      setIsError(true);\n      setIsSuccess(false);\n      setMessage(error.response.data.errorMessage);\n    });\n    reset();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"p-4\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(AlertBox, {\n      success: isSuccess,\n      error: isError,\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      label: \"User Mail\",\n      register: {\n        ...register(\"email\")\n      },\n      error: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center p-2 pt-4 space-x-2 border-t border-gray-200 rounded-b dark:border-gray-600\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        \"data-modal-hide\": \"defaultModal\",\n        type: \"submit\",\n        value: \"Add\",\n        className: \"text-white bg-primary hover:bg-ternary focus:ring-4 focus:outline-none focus:ring-primary font-medium rounded-lg text-sm px-5 py-2.5 text-center \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(NewUserForm, \"mfXBP4xS9I0p9+mxGokXIHmz0Z8=\", false, function () {\n  return [useForm];\n});\n_c = NewUserForm;\nvar _c;\n$RefreshReg$(_c, \"NewUserForm\");","map":{"version":3,"names":["React","useState","Input","useForm","yup","yupResolver","api","AlertBox","jsxDEV","_jsxDEV","NewUserForm","formType","_s","_errors$email","isError","setIsError","message","setMessage","isSuccess","setIsSuccess","schema","object","shape","email","string","required","register","formState","handleSubmit","reset","resolver","errors","onSubmit","data","headers","Authorization","localStorage","getItem","post","then","response","catch","error","errorMessage","className","children","success","fileName","_jsxFileName","lineNumber","columnNumber","type","label","value","_c","$RefreshReg$"],"sources":["/Users/sivasai/Documents/Review Changes/Project-Edith/ui/src/components/forms/NewUserForm.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport Input from '../atoms/Input'\nimport { useForm } from 'react-hook-form'\nimport * as yup from \"yup\"\nimport {yupResolver} from \"@hookform/resolvers/yup\"\nimport api from '../api/axiosConfig'\nimport { AlertBox } from '../alerts/AlertBox'\ntype NewUserFormElementTypes = {\n    email:string\n}\ntype NewUserFormType = {\n    formType?: \"EDIT\"\n  }\nexport const NewUserForm = ({formType}:NewUserFormType) => {\n    const [isError,setIsError] = useState(false);\n    const [message,setMessage] = useState(\"\");\n    const [isSuccess,setIsSuccess] = useState(false);\n\n    const schema = yup.object().shape({\n        email: yup.string().email('Invalid email format').required('Email is required')\n    })\n    \n\n    const {register, formState, handleSubmit,reset} = useForm<NewUserFormElementTypes>(\n        {\n\n            resolver: yupResolver(schema)\n        }\n    )\n    const {errors} = formState\n    const onSubmit = async (data:NewUserFormElementTypes) => {\n        const headers = {\n            Authorization:`Bearer ${localStorage.getItem(\"Jwt\")}`\n        }\n        await api.post(\"/addcontact\",data,{headers})\n            .then(response => {\n                 \n                setIsSuccess(true);\n                setIsError(false)\n                setMessage(\"Added Successfully..\")\n                \n            })\n            .catch(error => {\n                 \n                setIsError(true);\n                setIsSuccess(false);\n                setMessage(error.response.data.errorMessage)\n            })\n        \n         \n        reset();\n    }\n  return (\n    <form className='p-4' onSubmit={handleSubmit(onSubmit)}>\n        <AlertBox success={isSuccess} error={isError} message={message}/>\n        <Input type='text' label='User Mail' register={{...register(\"email\")}} error={errors.email?.message} />\n               <div className=\"flex items-center p-2 pt-4 space-x-2 border-t border-gray-200 rounded-b dark:border-gray-600\">\n            <input data-modal-hide=\"defaultModal\" type=\"submit\" value = \"Add\" className=\"text-white bg-primary hover:bg-ternary focus:ring-4 focus:outline-none focus:ring-primary font-medium rounded-lg text-sm px-5 py-2.5 text-center \" />\n        </div>\n    \n    </form>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}